 mysql -h localhost -u root -p

 CREATE TABLE VENDEDORES(
 	IDVENDEDORES INT PRIMARY KEY AUTO_INCREMENT,
 	NOME VARCHAR(30),
 	SEXO CHAR(1),
 	JANEIRO FLOAT(10, 2),
 	FEVEREIRO FLOAT(10, 2),
 	MARCO FLOAT(10, 2)
 	);

INSERT INTO VENDEDORES VALUES(NULL,'CARLOS','M',9874785.78,39784532.67,1234.90);
INSERT INTO VENDEDORES VALUES(NULL,'MARIA','F',987898,34532.67,198234.90);
INSERT INTO VENDEDORES VALUES(NULL,'RENATA','F',98745.78,3453782.67,1234.90);
INSERT INTO VENDEDORES VALUES(NULL,'CELIA','F',98745.78,34556732.67,1234.90);
INSERT INTO VENDEDORES VALUES(NULL,'OLIVEIRA','M',98745.78,34456532.67,1234.90);
INSERT INTO VENDEDORES VALUES(NULL,'CESAR','M',98745.78,34534562.67,1234.90);
INSERT INTO VENDEDORES VALUES(NULL,'ROBERTO','M',98745.78,3453132.67,1234.90);
INSERT INTO VENDEDORES VALUES(NULL,'CIRLEI','F',98745.78,3457532.67,1234.90);
INSERT INTO VENDEDORES VALUES(NULL,'CAROL','F',98745.78,34532562.67,1234.90);
INSERT INTO VENDEDORES VALUES(NULL,'TODISKLEI','M',9874455.78,34532.67,1234.90);
INSERT INTO VENDEDORES VALUES(NULL,'FABIO','M',987465.78,34532.67,1234.90);
INSERT INTO VENDEDORES VALUES(NULL,'FABIANA','F',986677745.78,34532.67,1234.90);

/* MAX - TRAZ O VALOR MAXIMO DE UMA COLUNA E MINIMO */

SELECT MAX(FEVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;

SELECT MIN(FEVEREIRO) AS MENOR_FEV
FROM VENDEDORES;

/* AVG - TRAZ O VALOR MEDIO DE UMA COLUNA */

SELECT AVG(FEVEREIRO) AS MEDIA_FEV
FROM VENDEDORES;


/*VARIAS FUNCOES*/

SELECT MAX(JANEIRO) AS MAX_JAN,
		MIN(JANEIRO) AS MIN_JAN,
		TRUNCATE(AVG(JANEIRO),2) AS MEDIA_JAN
		FROM VENDEDORES;

/* TRUNCATE SO DUAS CASAS DECIMAIS*?

/* A30 - AGREGANDO COM SUM()*/

SELECT SUM(JANEIRO) AS TOTAL_JAN
FROM VENDEDORES;


SELECT SUM(JANEIRO) AS TOTAL_JAN,
       SUM(FEVEREIRO) AS TOTAL_FEV,
       SUM(MARCO) AS TOTAL_MAR
FROM VENDEDORES;

/* VENDAS POR SEXO*/

SELECT SEXO, SUM(MARCO) AS TOTAL_MARCO
FROM VENDEDORES
GROUP BY SEXO;

/* A31 - VENDEDOR QUE VENDEU MENOS EM MARCO E O SEU NOME*/

/*NOME E O VALOR QUEVENDEU MAIS EM MARCO 
E QUEM VENDEU MAIS O QUE O VALOR MEDIO EM FEV*/

SELECT NOME, MIN(MARCO) AS MIN_MARCO
FROM VENDEDORES;

SELECT * FROM VENDEDORES;

SELECT MIN(MARCO) FROM VENDEDORES;

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MIN(MARCO) FROM VENDEDORES);

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MAX(FEVEREIRO) FROM VENDEDORES);

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO > (SELECT AVG(MARCO) FROM VENDEDORES);

SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO > (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

SELECT AVG(FEVEREIRO) FROM VENDEDORES;

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO < (SELECT AVG(MARCO) FROM VENDEDORES);

/* A32 - OPERAÇÕES EM LINHA*/

SELECT * FROM VENDEDORES;

 

SELECT NOME,
		JANEIRO,
		FEVEREIRO,
		MARCO,
		(JANEIRO+FEVEREIRO+MARCO) AS 'TOTAL',
		(JANEIRO+FEVEREIRO+MARCO) * .25 AS 'DESCONTO',
		TRUNCATE((JANEIRO+FEVEREIRO+MARCO)/3,2) AS 'MEDIA'
		FROM VENDEDORES;


/* A33 - ALTERAR TABELAS*/

CREATE TABLE TABELA(
	COLUNA1 VARCHAR(30),
	COLUNA2 VARCHAR(30),
	COLUNA3 VARCHAR(30)
	);
CREATE TABLE TABELA(
	COLUNA INT PRIMARY KEY AUTO_INCREMENT
);

/* ADD UMA PK*/
ALTER TABLE TABELA
ADD PRIMARY KEY (COLUNA1);

/* ADD COLUNA SEM POSIÇÃO. ULTIMA POSIÇÃO*/
ALTER TABLE TABELA
ADD COLUNA VARCHAR(30);

/* ADD COLUNA SEM POSIÇÃO. ULTIMA POSIÇÃO*/
ALTER TABLE TABELA
ADD COLUNA100 INT(11);

/*ADD UMA COLUNA COM POSICAO*/
ALTER TABLE TABELA
ADD COLUMN COLUNA4 VARCHAR(30) NOT NULL UNIQUE
AFTER COLUNA3;

/* MODIFICANDO O TIPO DE CAMPO*/
ALTER TABLE TABELA MODIFY COLUNA2 DATE NOT NULL;

/*RENOMEANDO O NOME DA TABELA*/
ALTER TABLE TABELA
RENAME PESSOA;

CREATE TABLE TIME(
IDTIME INT PRIMARY KEY AUTO_INCREMENT,
TIME VARCHAR(30),
ID_PESSOA VARCHAR(30)
);

/*FOREING KEY*/
ALTER TABLE TIME
ADD FOREIGN KEY(ID_PESSOA)
REFERENCES PESSOA( COLUNA1 );

SHOW CREATE TABLE TIME;


/*A34 - ORGANIZAÇÃO DE CHAVES - CONSTRAINT (REGRA)*/

CREATE TABLE JOGADOR(
	IDJOGADOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30)
);

 CREATE TABLE TIMES(
 	IDTIME INT PRIMARY KEY AUTO_INCREMENT,
 	NOMETIME VARCHAR(30),
 	ID_JOGADOR INT,
 	FOREIGN KEY(ID_JOGADOR)
 	REFERENCES JOGADOR(IDJOGADOR)
 	);

 INSERT INTO JOGADOR VALUES(NULL, 'GUERREIRO');
 INSERT INTO TIMES VALUES(NULL,'FLAMENGO',1);

 SHOW CREATE TABLE JOGADOR;
 SHOW CREATE TABLE TIMES;

 SHOW TABLES;

 DROP TABLE NOME DA TABELA;

 CREATE TABLE CLIENTE(
 IDCLIENTE INT,
NOME VARCHAR(30)
);

 CREATE TABLE TELEFONE(
 	IDTELEFONE INT,
 	TIPO CHAR(3) NOT NULL,
 	NUMERO VARCHAR(10) NOT NULL,
 	ID_CLIENTE INT
 	);

 ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE
 PRIMARY KEY(IDCLIENTE);

 ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
 FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE);

 SHOW CREATE TABLE TELEFONE;

 /*DICIONARIO DE DADOS*/

SHOW DATABASES;

USE INFORMATION_SCHEMA;

STATUS

SHOW TABLES;

DESC TABLE_CONSTRAINTS;

SELECT CONSTRAINT_SCHEMA AS 'BANCO',
	TABLE_NAME AS 'TABELA',
	CONSTRAINT_NAME AS 'NOME REGRA'
	CONSTRAINT_TYPE AS 'TIPO'
	FROM TABLE_CONSTRAINTS
	WHERE CONSTRAINT_SCHEMA = 'COMERCIO';

/* APAGANDO CONSTRAINTS*/
USE COMERCIO;

ALTER TABLE TELEFONE
DROP FOREIGN KEY FK_CLIENTE_TELEFONE;



/*A37 - EXERCICIOS OFICINA*/



CREATE DATABASE OFICINA;
USE OFICINA;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M', 'F') NOT NULL,
	ID_CARRO INT UNIQUE
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	TIPO ENUM('CEL', 'RES', 'COM') NOT NULL,
	NUMERO VARCHAR(30) NOT NULL,
	ID_CLIENTE INT
);

CREATE TABLE MARCA(
	IDMARCA INT PRIMARY KEY AUTO_INCREMENT,
	MARCA VARCHAR(30) UNIQUE
);

CREATE TABLE CARRO(
	IDCARRO INT PRIMARY KEY AUTO_INCREMENT,
	MODELO VARCHAR(30) NOT NULL,
	PLACA VARCHAR(30) NOT NULL UNIQUE,
	ID_MARCA INT
);

CREATE TABLE COR(
	IDCOR INT PRIMARY KEY AUTO_INCREMENT,
	COR VARCHAR(30) UNIQUE
);

CREATE TABLE CARRO_COR(
	ID_CARRO INT,
	ID_COR INT,
	PRIMARY KEY(ID_CARRO,ID_COR)
); 

/*CONSTRAINTS*/

ALTER TABLE TELEFONE
ADD CONSTRAINT FK_TELEFONE_CLIENTE
FOREIGN KEY(ID_CLIENTE)
REFERENCES CLIENTE(IDCLIENTE);

ALTER TABLE CLIENTE
ADD CONSTRAINT FK_CLIENTE_CARRO
FOREIGN KEY(ID_CARRO)
REFERENCES CARRO(IDCARRO);

ALTER TABLE CARRO
ADD CONSTRAINT FK_CARRO_MARCA
FOREIGN KEY(ID_MARCA)
REFERENCES MARCA(IDMARCA);

ALTER TABLE CARRO_COR
ADD CONSTRAINT FK_COR 
FOREIGN KEY(ID_COR)
REFERENCES COR(IDCOR);

ALTER TABLE CARRO_COR
ADD CONSTRAINT FK_CARRO 
FOREIGN KEY(ID_CARRO)
REFERENCES CARRO(IDCARRO);

INSERT INTO CARRO VALUES(NULL,)





/* ESTRUTURA DE TRIGGER*/



CREATE TRIGGER NOME
BEFORE/AFTER INSERT/DELETE/UPDATE ON TABELA
FOR EACH ROW (PAPA CADA LINHA)
BEGIN -> INICIO

			QUALQUER COMANDO SQL

END -> FIM



CREATE DATABASE AULA40;
USE AULA40;

CREATE TABLE USUARIO(
	IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30),
	SENHA VARCHAR(100)
);

CREATE TABLE BKP_USUARIO(
	IDbACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDUSUARIO INT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30)
);

DELIMITER $ 

CREATE TRIGGER BRACKUP_USER
BEFORE DELETE ON USUARIO
FOR EACH ROW 
BEGIN 

		INSERT INTO BKP_USUARIO VALUES
		(NULL,OLD.IDUSUARIO,OLD.NOME,OLD.LOGIN);

END
$

INSERT INTO USUARIO VALUES(NULL,'ANDRADE','ANDRADE2009','HEXACAMPEAO');

SELECT * FROM USUARIO;

DELETE FROM USUARIO WHERE IDUSUARIO = 1;

SELECT * FROM BKP_USUARIO;


/* AULA 41 - COMUNICAÇÃO ENTRE BANCOS*/

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

STATUS

CREATE DATABASE BACKUP;

USE BACKUP

CREATE TABLE BKP_PRODUTO(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

USE LOJA;

STATUS

INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,1000,'TESTE',0.0);

SELECT * FROM BACKUP.BKP_PRODUTO;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUT
BEFORE INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR);

END
$

DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

SELECT * FROM PRODUTO;

SELECT * FROM BACKUP.BKP_PRODUTO;


DELIMITER $

CREATE TRIGGER BACKUP_PRODUT0_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR);

END
$

DELIMITER ;

DELETE FROM PRODUTO WHERE IDPRODUTO = 2;

DROP TRIGGER BACKUP_PRODUT;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTO
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,NEW.IDPRODUTO,
	NEW.NOME,NEW.VALOR);

END
$

DELIMITER ;

INSERT INTO PRODUTO VALUES(NULL,'LIVRO C#',100.00);

SELECT * FROM PRODUTO;
SELECT * FROM BACKUP.BKP_PRODUTO;

ALTER TABLE BACKUP.BKP_PRODUTO 
ADD EVENTO CHAR(1);

DROP TRIGGER BACKUP_PRODUTO_DEL;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUT0_DEL
BEFORE DELETE ON PRODUTO
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTO VALUES(NULL,OLD.IDPRODUTO,
	OLD.NOME,OLD.VALOR);

END
$


/* AULA 42 - TRIGGER DE AUDITORIA*/

DELIMITER ;

DROP DATABASE LOJA;

DROP DATABASE BACKUP;

CREATE DATABASE LOJA;

 USE LOJA;

CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

INSERT INTO PRODUTO VALUES(NULL,'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO BI',80.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO ORACLE',70.00);
INSERT INTO PRODUTO VALUES(NULL,'LIVRO SQL SERVER',100.00);

CREATE DATABASE BACKUP;

use BACKUP;

CREATE TABLE BKP_PRODUTO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR_ORIGINAL FLOAT(10,2),
	VALOR_ALTERADO FLOAT(10,2),
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)
);

USE LOJA;

SELECT * FROM PRODUTO;

DELIMITER $

CREATE TRIGGER AUDIT_PROD
AFTER UPDATE ON PRODUTO
FOR EACH ROW
BEGIN
		
		INSERT INTO BACKUP.BKP_PRODUTO VALUES
		(NULL,OLD.IDPRODUTO,OLD.NOME,
		OLD.VALOR,NEW.VALOR,NOW(),CURRENT_USER(),'U');

END
$



/* AULA 44 - AUTORELACIONAMENTO*/

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	HORAS INT,
	VALOR FLOAT(10,2),
	ID_PREREQ  INT
);

ALTER TABLE CURSOS ADD CONSTRAINT FK_PREREQ
FOREIGN KEY(ID_PREREQ) REFERENCES CURSOS(IDCURSO);

INSERT INTO CURSOS VALUES(NULL,'BD RELACIONAL',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'BUSINESS INTELIGENCE',40,800.00,1);
INSERT INTO CURSOS VALUES(NULL,'RELATORIOS AVANÇADOS',20,600.00,2);
INSERT INTO CURSOS VALUES(NULL,'LOGICA DE PROGRAMACAO',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'RUBY',30,500.00,4);

SELECT * FROM CURSOS;

SELECT NOME, VALOR, HORAS, IFNULL(ID_PREREQ,'SEM REQ') REQUISITO
FROM CURSOS;

/* NOME, VALOR, HORAS E O NOME DO PRE REQUISITO DO CURSO*/

SELECT C.NOME AS CRUSO,
C.VALOR AS VALOR,
C.HORAS AS CARGA, 
IFNULL (P.NOME, '------') AS PREREQ
FROM CURSOS C LEFT JOIN CURSOS P
ON P.IDCURSO = C.ID_PREREQ;

/* AULA 45 - CURSORES */

CREATE DATABASE CURSORES;
USE CURSORES;

CREATE TABLE VENDEDORES(
	IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT
	);


INSERT INTO VENDEDORES VALUES(NULL,'MAFRA',32432,67892,567765);
INSERT INTO VENDEDORES VALUES(NULL,'CLARA',09876,634234,567765);
INSERT INTO VENDEDORES VALUES(NULL,'JOAO',67892,376543,67892);
INSERT INTO VENDEDORES VALUES(NULL,'LILIAN',45678,238234,567765);
INSERT INTO VENDEDORES VALUES(NULL,'ANTONIO',376543,234234,567765);
INSERT INTO VENDEDORES VALUES(NULL,'GLORIA',7346532,376543,67892);

SELECT * FROM VENDEDORES;

SELECT NOME, (JAN+FEV+MAR) AS TOTAL FROM VENDEDORES;
SELECT NOME, (JAN+FEV+MAR) AS TOTAL, (JAN+FEV+MAR) /3 AS MEDIA FROM VENDEDORES;

CREATE TABLE VEND_TOTAL(
	NOME VARCHAR(50),
	JAN INT,
	FEV INT,
	MAR INT,
	TOTAL INT,
	MEDIA INT

);

DELIMITER $

CREATE PROCEDURE INSEREDADOS()
BEGIN
		DECLARE FIM INT DEFAULT 0;
		DECLARE VAR1, VAR2, VAR3, VTOTAL, VMEDIA INT;
		DECLARE VNOME VARCHAR(50);

		DECLARE REG CURSOR FOR(
			SELECT NOME, JAN, FEV, MAR FROM VENDEDORES
		);	

		DECLARE CONTINUE HANDLER FOR NOT FOUND SET FIM = 1;

		OPEN REG;

		REPEAT

			FETCH REG INTO VNOME, VAR1, VAR2, VAR3;
			IF NOT FIM THEN
				SET VTOTAL = VAR1 + VAR2 + VAR3;
				SET VMEDIA = VTOTAL / 3;

				INSERT INTO VEND_TOTAL VALUES(VNOME,VAR1,VAR2,VAR3,VTOTAL,VMEDIA);
			END IF;
		UNTIL FIM END REPEAT;

		CLOSE REG;		
END
$

DELIMITER ;
SELECT * FROM VENDEDORES;
SELECT * FROM VEND_TOTAL;

CALL INSEREDADOS();

/*AULA 47 - SEGUNDA E TERCEIRA FORMAS NORMAIS*/


CREATE DATABASE CONSULTORIO;

USE CONSULTORIO;

CREATE TABLE PACIENTE(
	IDPACIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	SEXO CHAR(1),
	EMAIL VARCHAR(30),
	NASCIMENTO DATE
);

CREATE TABLE MEDICO(
	IDMEDICO INT PRIMARY KEY IDENTITY,
	NOME VARCHAR(30),
	SEXO CAHR(1),
	ESPECIALIDADE VARCHAR(30),
	FUNCIONARIO ENUM('S','N')
);

CREATE TABLE HOSPITAL(
	IDHOSPITAL INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	BAIRRO VARCHAR(30),
	CIDADE VARCHAR(30),
	ESTADO CHAR(2)
);

CREATE TABLE CONSULTA(
	IDCONSULTA INT PRIMARY KEY AUTO_INCREMENT,
	ID_PACIENTE INT,
	ID_MEDICO INT,
	ID_HOSPITAL INT,
	DATA DATETIME,
	DIAGNOSTICO VARCHAR(50)
);

CREATE TABLE INTERNACAO(
	IDINTERNACAO INT PRIMARY KEY AUTO_INCREMENT,
	ENTRADA DATETIME,
	QUARTO INT,
	SAIDA DATETIME,
	OBSERVACOES VARCHAR(50),
	ID_CONSULTA INT UNIQUE	
);  
						  

/* CRIANDO AS CONSTRAINTS - CORREÇÃO COD do OBJ (PK, FK) _ TABELA PERTENCENTE _ TABELA DE ONDE VEM*/

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_PACIENTE
FOREIGN KEY(ID_PACIENTE) REFERENCES PACIENTE(IDPACIENTE);

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_MEDICO
FOREIGN KEY(ID_MEDICO) REFERENCES MEDICO(IDMEDICO);

ALTER TABLE CONSULTA ADD CONSTRAINT FK_CONSULTA_HOSPITAL
FOREIGN KEY(ID_HOSPITAL) REFERENCES HOSPITAL(IDHOSPITAL);

ALTER TABLE INTERNACAO ADD CONSTRAINT FK_INTERNACAO_CONSULTA
FOREIGN KEY(ID_CONSULTA) REFERENCES CONSULTA(IDCONSULTA);


















